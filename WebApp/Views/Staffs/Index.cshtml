 @model PaginatedList<WebApp.Models.Staff>
 
@{

    ViewData["Title"] = "Staff";
}

<h1 class=" info">Staff List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "Staffs", FormMethod.Get))
{
    <p class="info">
        Search by first or last name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <!--search box-->
        <input type="submit" value="Search" />
        <a asp-action="Index">Back to Full List</a>
    </p>
}
 <table class="table">
    <thead>
         <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().MidName)
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>       <!--sorting last name-->
            <th>
                @Html.DisplayNameFor(model => model.First().Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PhoneNumber)
            </th>
            <th>
               Picture
            </th>
            <th></th>
        </tr> 
    </thead>
    <tbody> 
@foreach (var item in Model) {
           <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
                 <td>
                   <img src="@("~/images/"+item.ImageName)" asp-append-version="true" width="75px" height="75px"/> <!--upload image button-->
                </td> 
            <td>
                <a asp-action="Edit" asp-route-id="@item.StaffID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.StaffID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.StaffID">Delete</a>
            </td> 
        </tr> 
           
}
            <!--cards= each card created for the staff it will be filled in rows (4 cards each row) and it repeats.-->
    <div class="flex-container">
            @foreach (var items in Model)
            {
            <div class="card" style="width: 18rem;">
                    <img class="card-img-top" src="@("~/images/"+items.ImageName)" asp-append-version="true" width="75px" height="75px" alt="Card image cap" style="object-fit: cover;">
                <div class="card-body">
                    <h5 class="card-title">
                        @Html.DisplayFor(modelItem => items.FirstName)
                        @Html.DisplayFor(modelItem => items.MidName)
                        @Html.DisplayFor(modelItem => items.LastName)
                    </h5>
                    <a href="#" class="btn btn-primary">View</a>
                </div>
            </div>
            }
    </div>

    </tbody>
</table> 

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<!--paging buttons-->
<a asp-action="Index"   
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default gree info @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default gree info @nextDisabled">
    Next
</a> 